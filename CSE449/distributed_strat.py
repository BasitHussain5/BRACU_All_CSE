# -*- coding: utf-8 -*-
"""Distributed Strat

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1cRwy9084j69FM_gj9gFw7HH7IAnFLY8r
"""

with strategy.scope():
    # Use a pre-trained model (EfficientNetB0) and remove its classification layers
    model = tf.keras.applications.EfficientNetB0(
        weights='imagenet',        # Pre-trained weights from ImageNet
        input_shape=(224, 224, 3),  # Image shape
        include_top=False           # Exclude the final classification layer
    )

    # Freeze the pre-trained model layers (do not train them)
    model.trainable = False

    # Add custom layers for maize disease classification
    x = tf.keras.layers.GlobalAveragePooling2D()(model.output)
    x = tf.keras.layers.Dense(256, activation='relu')(x)
    x = tf.keras.layers.Dropout(0.5)(x)
    predictions = tf.keras.layers.Dense(train_generator.num_classes, activation='softmax')(x)

    # Final model
    final_model = tf.keras.Model(inputs=model.input, outputs=predictions)

    # Compile the model
    final_model.compile(
        optimizer=tf.keras.optimizers.Adam(),
        loss='categorical_crossentropy',
        metrics=['accuracy']
    )

